Common to both server and client
--------------------------------
   git clone http --depth=1 --recurse-submodules git@github.com:PripyatAutomations/rustyrig-fw.git
   cd rustyrig-fw
   sudo ./install-deps.sh
   make
   ./test-run.sh to start server
   ./rrclient.sh to test the client

If it works, you can install with:
   make install

Server setup below
-------------------------------------

This code is a bit of a mess. Right now I'm focused on getting it functional
then we'll go through and rewrite/cleanup each file.

I've made this mess in essentially a few weeks^Wmonths of spare time.
Keep that in mind before exposing it to the internet.
Probably wise to use a VPN for now.

Mongoose httpd is well maintained and tested, but my code presently is not.

Feel free to contribute changes or improvements via github or .diff's!

Long story short, on a debian-based system do the following to try it:

   Find your rig's model # in hamlib:
	rigctld -l | less

   Start up rigctld connected to your rig (example is dummy):
	rigctld -o -v -v -m 1 &

   Edit config/radio.config.json
	joe config/radio.config.json

   Fetch updates & submodules
	make update

   Build
	make

You can use 'make run' to start it up with audio etc automatically without installing (probably best for now)


   Open a browser and connect to the http (port 8420) or https (port 4420):
	firefox	https://localhost:4420/



-- If building fails, try ./build.sh instead of make

Audio Setup
------------
If you are installing this permanently:
Copy fwdsp-test.sh somewhere and edit it.
Run it and it will connect to the server, if running and handle the audio transfers

--
See STATUS for status of subsystems.
