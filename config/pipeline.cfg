; This will merge into rrserver.cfg soon

[general]
au.rig0.rx=pulsesrc device=alsa_input.usb-Creative_Technology_Ltd_Sound_Blaster_X-Fi_Go__Pro_00315403-00.analog-stereo
au.rig0.rx.rate=48000
au.rig0.tx=pulsesink device=alsa_output.usb-Creative_Technology_Ltd_Sound_Blaster_X-Fi_Go__Pro_00315403-00.analog-stereo
au.rig0.tx.rate=48000
path.sock-dir=./run/rrserver

[pipelines]
; options: immortal (always restarted), dynamic (will be started as needed), disabled; comma delimited

;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Sound Device Connection ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Capture audio from the connected rig's mic-input
cap-rig0-rx-raw48=immortal| \
   ${au.rig0.rx} ! \
   audioconvert ! audioresample ! audio/x-raw,format=S16LE,rate=${au.rig0.rx.rate} ! \
   queue ! tee name=t-cap-rig0-rx ! \
   shmsink socket-path=${path.sock-dir}/cap-rig0-rx-raw48.shm shm-size=1048576 wait-for-connection=false

; Send data out using the connected rig (via speaker out)
send-rig0-tx-raw48=immortal| \
   shmsrc socket-path=${path.sock-dir}/send-rig0-tx-raw48.shm ! \
   audioconvert ! audioresample ! audio/x-raw,rate=${au.rig0.tx.rate} ! \
   {au.rig0.tx}

;;;;;;;;
; Need to insert some kind of 'bus' for the rig0 RX stream, so we can switch to mirroring data in here from
; the MONITOR (TX audio) stream for rig0, so when someone TX's everyone else hears it as if MON were enabled in a traditional
; receiver.
;;;;;;;;;

;;;;;;;;;;;;;;;;
;
#input-selector name=rxsel
#   pad 0: shmsrc(cap-rig0-rx-raw48.shm)  # rig receiver audio
#   pad 1: shmsrc(send-rig0-tx-raw48.shm) # TX bus monitor audio

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Encode things we are sending TO the clients ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; This will create 16khz PCM for streaming TO clients
enc-rig0-tx-pc16.deps=cap-rig0-tx-raw48
enc-rig0-tx-pc16=dynamic| \
   shmsrc socket-path=${path.sock-dir}/cap-rig0-rx-raw48.shm ! \
   audioconvert ! audioresample ! audio/x-raw,rate=16000 ! \
   shmsrc socket-path=${path.sock-dir}/enc-rig0-tx-pc16.shm

; This will create 16khz mulaw ADPCM for streaming TO clients
enc-rig0-tx-mu16.deps=cap-rig0-tx-raw48
enc-rig0-tx-mu16=dynamic| \
   shmsrc socket-path=${path.sock-dir}/enc-rig0-rx-raw48.shm ! \
   audioconvert ! audioresample ! audio/x-raw,rate=16000 ! \
   mulawenc ! \
   shmsrc socket-path=${path.sock-dir}/enc-rig0-tx-mu16.shm

; This will create 8khz mulaw ADPCM for streaming TO clients
enc-rig0-tx-mu08.deps=cap-rig0-tx-raw48
enc-rig0-tx-mu08=dynamic| \
   shmsrc socket-path=${path.sock-dir}/enc-rig0-rx-raw48.shm ! \
   audioconvert ! audioresample ! audio/x-raw,rate=8000 ! \
   mulawenc ! \
   shmsrc socket-path=${path.sock-dir}/enc-rig0-tx-mu08.shm

; This will create OPUS stream for streaming TO clients (web users?)
enc-rig0-tx-opus.deps=cap-rig0-tx-raw48
enc-rig0-tx-opus=dynamic| \
   shmsrc socket-path=${path.sock-dir}/enc-rig0-rx-raw48.shm ! \
   opusenc ! \
   shmsrc socket-path=${path.sock-dir}/enc-rig0-tx-opus.shm

; This will create FLAC stream for streaming TO clients
enc-rig0-tx-flac.deps=cap-rig0-tx-raw48
enc-rig0-tx-flac=dynamic| \
   shmsrc socket-path=${path.sock-dir}/enc-rig0-rx-raw48.shm ! \
   flacenc ! \
   shmsrc socket-path=${path.sock-dir}/enc-rig0-tx-flac.shm


;;;;;;;;;;;;;;;
; Transcoding ;
;;;;;;;;;;;;;;;

; Convert pc16 TX audio to raw PCM at 16khz for mixing into the RX audio when users TX
recode-rig0-tx-pc16=dynamic| \
   shmsrc socket-path=${path.sock-dir}/send-rig0-raw48.shm ! \
   audioconvert ! audioresample ! audio/x-raw,rate=16000 ! \
   shmsink socket-path=${path.sock-dir}/send-rig0-pc16

; Convert mu16 TX audio to mulaw @ 16khz for mixing into the RX audio when users TX
recode-rig0-tx-mu16=dynamic| \
   shmsrc socket-path=${path.sock-dir}/send-rig0-raw48.shm ! \
   audioconvert ! audioresample ! audio/x-raw,rate=16000 ! \
   mulawenc ! \
   shmsink socket-path=${path.sock-dir}/send-rig0-mu16.shm

; Convert mu08 TX audio to mulaw @ 16khz for mixing into the RX audio when users TX
recode-rig0-tx-mu08=dynamic| \
   shmsrc socket-path=${path.sock-dir}/send-rig0-raw48.shm ! \
   audioconvert ! audioresample ! audio/x-raw,rate=8000 ! \
   mulawenc ! \
   shmsink socket-path=${path.sock-dir}/send-rig0-mu08.shm

; Convert opus TX audio to mulaw @ 16khz for mixing into the RX audio when users TX
recode-rig0-tx-opus=dynamic| \
   shmsrc socket-path=${path.sock-dir}/send-rig0-raw48.shm ! \
   audioconvert ! audioresample ! \
   opusenc ! \
   shmsink socket-path=${path.sock-dir}/send-rig0-opus.shm

; Convert flac TX audio to mulaw @ 16khz for mixing into the RX audio when users TX
recode-rig0-tx-flac=dynamic| \
   shmsrc socket-path=${path.sock-dir}/send-rig0-raw48.shm ! \
   audioconvert ! audioresample ! \
   flacenc ! \
   shmsink socket-path=${path.sock-dir}/send-rig0-flac.shm
