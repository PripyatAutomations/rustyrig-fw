[i2c/eeprom]
- Implement hard coded address for i2c eeprom and a codepath to support it
- Should we bypass the eeprom step and read directly from the config & channels.json on posix?
  - Maybe a use sqlite3 db for all that?

[makefile]
Make things so that make debug forces a make clean & adding make debug if last built without debug (can we use nm or such to check symbols)

[porting]
- Shorten strings where possible
- Wrap strings for storage as appropriate on micros (stm32? ;)

[buildconf]
- Support for loading older (input) eeprom layouts, according to version saved in the EEPROM
  - see res/archive/*

[Network]
    net/ip4 and net/ip6 split
    net/prefer_ip4
    net/ignore_icmp_echo
    net/ignore_mcast
    net/ignore_bcast

[HostInterface]

[Backplane]

[CAT]
* Implement control over unix pipes in posix mode
* Implement control over stm32 serial over usb

[Porting]
minimal inet_ntop() for non-posix

[eeprom]
* remove need for they key field (why not use the name of the entry itself?) in eeprom_layout
* fix relative offsets in eeprom_layout
* Create a minimal tokenization of eeprom name references, so we don't have to store full strings all over
- Make a tool which converts res/eeprom_layout.json (and eeprom_types.json) to a text file like doc/eeprom.txt
* Fix net/bind to by an ip4 or ip6 type instead of string!

[misc]
* Add emulation backend using flrig or hamlib
  - Internally cache the radio state & poll it regularly
  - Send push events of the diff to client w/ periodic full updates
  - 'Translate' our yaesu/kpa500 CAT commands by calling backend

[mqtt]
* Finish mqtt server stuff (via mongoose)
* Implement mqtt client mode, for sending to existing server

[www]
* Implement Web Serial firmare uploads
        https://developer.chrome.com/articles/serial/
        https://developer.mozilla.org/en-US/docs/Web/API/Web_Serial_API
        - js/zmodemjs for zmodem upload
* When we reconnect, we should send a ping with our auth token
  - The serve may respond with "expired" to tell us our session is invalid or a new token
    if the session is still valid.
* display a Reconnecting symbol on top in the corner
* Rework the http_client stuff so that instead of being removed on disconnected,
  we just use a last-seen time to expire their session. We should never have a ton
  of people connected to the radio, so it should be fine this way
* Fix reconnect times. They seem to be much later than what the user gets told
* Fix tab highlights
* Implement tabbed/windowed modes with movable/resizable windows (overlapping)

[logger/debug]
* Add support for configuring masks of what debug level messages will be seen using wildcards
