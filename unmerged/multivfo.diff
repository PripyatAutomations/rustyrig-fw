diff --git a/backend.hamlib.c b/backend.hamlib.c
index 68ca4a5..8d51c3b 100644
--- a/backend.hamlib.c
+++ b/backend.hamlib.c
@@ -207,6 +207,59 @@ static bool hl_fini(void) {
    return false;
 }
 
+
+typedef struct {
+   const char *name;
+   vfo_t rig_vfo;
+} vfo_info_t;
+
+static const vfo_info_t all_vfos[] = {
+   { "A", RIG_VFO_A },
+   { "B", RIG_VFO_B },
+//   { "C", RIG_VFO_C }, // Optional, depending on radio
+   // Add more if needed
+};
+
+bool hl_poll(void) {
+   char msgbuf[HTTP_WS_MAX_MSG];
+   char body[HTTP_WS_MAX_MSG] = "";
+   char entry[256];
+   size_t offset = 0;
+   unsigned long now = time(NULL);
+
+   offset += snprintf(body + offset, sizeof(body) - offset, "{");
+
+   int vfos = sizeof(all_vfos) / sizeof(all_vfos[0]);
+   for (int i = 0; i < vfos; i++) {
+      hamlib_state_t st = {0};
+      if (rig_set_vfo(hl_rig, all_vfos[i].rig_vfo) != RIG_OK) continue;
+      rig_get_freq(hl_rig, all_vfos[i].rig_vfo, &st.freq);
+      rig_get_mode(hl_rig, all_vfos[i].rig_vfo, &st.rmode, &st.width);
+      rig_get_ptt(hl_rig, all_vfos[i].rig_vfo, &st.ptt);
+
+      snprintf(entry, sizeof(entry),
+         "\"%s\": { \"freq\": %.0f, \"mode\": \"%s\", \"width\": %li, \"ptt\": \"%s\" }%s",
+         all_vfos[i].name,
+         st.freq,
+         rig_strrmode(st.rmode),
+         st.width,
+         st.ptt ? "true" : "false",
+         (i < vfos - 1 ? "," : "")
+      );
+      offset += snprintf(body + offset, sizeof(body) - offset, "%s", entry);
+   }
+
+   snprintf(msgbuf, sizeof(msgbuf),
+      "{ \"cat\": { \"state\": { %s }, \"ts\": %lu } }",
+      body, now
+   );
+
+   struct mg_str mp = mg_str(msgbuf);
+   ws_broadcast(NULL, &mp);
+   return false;
+}
+
+#if	0
 // Here we poll the various meters and state
 bool hl_poll(rr_vfo_t vfo) {
    // XXX: We need to deal with generating diffs
@@ -252,14 +305,14 @@ bool hl_poll(rr_vfo_t vfo) {
         
    mp = mg_str(msgbuf);
 
-   // Send to everyone, including the sender, which will then display it in various widgets
+   // Send to everyone logged in, which will then display it in various widgets
    ws_broadcast(NULL, &mp);
 
    // Send a 
 
    return false;
 }
-
+#endif	// 0
 static rr_backend_funcs_t rr_backend_hamlib_api = {
    .backend_fini = &hl_fini,
    .backend_init = &hl_init,
diff --git a/inc/backend.h b/inc/backend.h
index 93a1e1e..9381ec0 100644
--- a/inc/backend.h
+++ b/inc/backend.h
@@ -16,7 +16,7 @@ struct rr_backend_funcs {
    // Backend management
    bool		(*backend_init)(void);			// Startup
    bool		(*backend_fini)(void);			// Shutdown
-   bool		(*backend_poll)(rr_vfo_t vfo);		// Called periodically to get the rig status
+   bool		(*backend_poll)(void);		// Called periodically to get the rig status
 
    ////////////////////////////////////////
    // Rig control
diff --git a/ws.bcast.c b/ws.bcast.c
index d076fdb..756d1f1 100644
--- a/ws.bcast.c
+++ b/ws.bcast.c
@@ -35,7 +35,6 @@ void ws_broadcast(struct mg_connection *sender, struct mg_str *msg_data) {
 
    http_client_t *current = http_client_list;
    while (current != NULL) {
-      // NULL sender means it came from the server itself
       if ((current->is_ws && current->authenticated) && (current->conn != sender)) {
          mg_ws_send(current->conn, msg_data->buf, msg_data->len, WEBSOCKET_OP_TEXT);
       }
diff --git a/www/js/webui.js b/www/js/webui.js
index b502c36..5c3a13b 100644
--- a/www/js/webui.js
+++ b/www/js/webui.js
@@ -190,48 +190,29 @@ function ws_connect() {
             var msg_ts = msg_timestamp(alert_ts);
 
             chat_append(`<div class="chat-status error">${msg_ts}&nbsp;!!ALERT!!&nbsp;&lt;${alert_from}&gt;&nbsp;&nbsp;${alert_msg}</div>`);
-         } else if (msgObj.cat) {
-//            console.log("msg: ", msgObj);
-            var vfo = msgObj.cat.state.vfo;
-            var freq = msgObj.cat.state.freq;
-            var mode = msgObj.cat.state.mode;
-            var width = msgObj.cat.state.width;
-            var ptt = msgObj.cat.state.ptt;
-            var ts = msgObj.cat.ts;
-
-            if (typeof vfo !== 'undefined') {
-               active_vfo = vfo;
-            }
-            if (typeof freq !== 'undefined') {
-               if (active_vfo === "A") {
-                  $('span#vfo-a-freq').html(freq);
-               } else if (active_vfo === "B") {
-                  $('span#vfo-b-freq').html(freq);
+         } else if (msgObj.cat && msgObj.cat.state) {
+            for (let vfo in msgObj.cat.state) {
+               let state = msgObj.cat.state[vfo];
+               if (!state) {
+                  return false;
                }
-               let $input = $('#rig-freq');
-               freq_set_digits(freq, $input);
-            }
-            if (typeof mode !== 'undefined') {
-               if (active_vfo === "A") {
-                  $('span#vfo-a-mode').html(mode);
-               } else if (active_vfo === "B") {
-                  $('span#vfo-b-mode').html(mode);
+
+               // Update display for that VFO
+               if (typeof state.freq !== 'undefined') {
+                  $(`span#vfo-${vfo.toLowerCase()}-freq`).html(state.freq);
+                  if (vfo === active_vfo) freq_set_digits(state.freq, $('#rig-freq'));
                }
-            }
-            if (typeof width !== 'undefined') {
-               if (active_vfo === "A") {
-                  $('span#vfo-a-width').html(width);
-               } else if (active_vfo === "B") {
-                  $('span#vfo-b-width').html(width);
+               if (typeof state.mode !== 'undefined') {
+                  $(`span#vfo-${vfo.toLowerCase()}-mode`).html(state.mode);
                }
-            }
-            if (typeof ptt !== 'undefined') {
-               var ptt_l = ptt.toLowerCase();
-
-               if (ptt_l === "true" || ptt_l === "on" || ptt_l === 'yes') {
-                  $('#rig-ptt').addClass("red-btn");
-               } else {
-                  $('#rig-ptt').removeClass("red-btn");
+               if (typeof state.width !== 'undefined') {
+                  $(`span#vfo-${vfo.toLowerCase()}-width`).html(state.width);
+               }
+               if (typeof state.ptt !== 'undefined') {
+                  const pttOn = state.ptt.toLowerCase?.() === "true" || state.ptt === true;
+                  const $ptt = $('#rig-ptt');
+                  if (pttOn) $ptt.addClass("red-btn");
+                  else $ptt.removeClass("red-btn");
                }
             }
          } else if (msgObj.ping) {			// Handle PING messages
